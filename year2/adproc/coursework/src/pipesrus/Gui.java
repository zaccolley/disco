package pipesrus;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class Gui extends javax.swing.JFrame {

    private ArrayList<Order> orders = new ArrayList();
    private DefaultListModel orderListItems = new DefaultListModel();
    
    int tempQuantity = 0;
    String tempDateTime;
    
    double tempLength = 0.0;
    double tempDia = 0.0;
    
    int tempGrade = 1;
    int tempColours = 0;
    
    boolean tempInsul = false;
    boolean tempChemRes = false;
    boolean tempReinforce = false;    

    public Gui(ArrayList<Order> orders) {
        resetTempVars();
        
        initComponents();
       
        //http://stackoverflow.com/questions/2442599/how-to-set-jframe-to-appear-centered-regardless-of-the-monitor-resolution
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2-200, dim.height/2-this.getSize().height/2);
        
        addOrder.setBounds(0, 0, 373, 243);
        addOrder.setLocation(dim.width/2-this.getSize().width/2+450, dim.height/2-this.getSize().height/2);
        
        this.orders = orders;
        
        updateItemList();
        this.orderList.setModel(orderListItems);
    }
    
    public ArrayList<Order> getOrders(){
        return orders;
    }
    
    public void addOrder(Order o){
        orders.add(o);
    }
    
    public void updateItemList(){
        orderListItems.removeAllElements();        
        
        int pipeAmount = 0;
        
        if(orders.size() > 0){
            for(Order o: orders){
                double orderItemCost = Math.floor((o.getCost() * o.getQuantity()) * 100) / 100;
                orderListItems.addElement("<html><b>£" + orderItemCost + "</b> " + o);
                pipeAmount += o.getQuantity();
            }
        }else{
            orderListItems.addElement("<html><i>No orders</i>");
        }
        
        itemAmountLabel.setText("Order amount: " + orders.size() + " ("+ pipeAmount +" pipes)");
        
        totalCost(orders);
    }
    
    public void totalCost(ArrayList<Order> orders){
        double totalCost = 0.0;
        
        for(Order o: orders){
            totalCost += o.getCost() * o.getQuantity();
        }
        
        totalCostLabel.setText("Total: £" + (double) Math.floor(totalCost * 100) / 100  + "\n");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addOrder = new javax.swing.JDialog();
        sizeLabel = new javax.swing.JLabel();
        lengthLabel = new javax.swing.JLabel();
        diaLabel = new javax.swing.JLabel();
        gradeLabel = new javax.swing.JLabel();
        coloursLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        lengthTextField = new javax.swing.JTextField();
        diaTextField = new javax.swing.JTextField();
        gradeComboBox = new javax.swing.JComboBox();
        coloursComboBox = new javax.swing.JComboBox();
        seperator = new javax.swing.JSeparator();
        insulCheckBox = new javax.swing.JCheckBox();
        chemResCheckBox = new javax.swing.JCheckBox();
        reinforceCheckBox = new javax.swing.JCheckBox();
        quantitySpinner = new javax.swing.JSpinner();
        submitOrderButton = new javax.swing.JButton();
        discardOrderButton = new javax.swing.JButton();
        titleLabel = new javax.swing.JLabel();
        totalCostLabel = new javax.swing.JLabel();
        itemAmountLabel = new javax.swing.JLabel();
        addOrderButton = new javax.swing.JButton();
        editOrderButton = new javax.swing.JButton();
        deleteOrderButton = new javax.swing.JButton();
        orderScrollPane = new javax.swing.JScrollPane();
        orderList = new javax.swing.JList();
        submitOrdersButton = new javax.swing.JButton();
        resetOrdersButton = new javax.swing.JButton();

        addOrder.setResizable(false);

        sizeLabel.setText("Size:");

        lengthLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        lengthLabel.setText("Length:");

        diaLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        diaLabel.setText("Diameter:");

        gradeLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        gradeLabel.setText("Grade:");

        coloursLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        coloursLabel.setText("Colours:");

        quantityLabel.setText("Quantity:");

        lengthTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lengthTextField.setText("0.0");
        lengthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lengthTextFieldActionPerformed(evt);
            }
        });
        lengthTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lengthTextFieldPropertyChange(evt);
            }
        });

        diaTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        diaTextField.setText("0.0");
        diaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                diaTextFieldActionPerformed(evt);
            }
        });
        diaTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                diaTextFieldPropertyChange(evt);
            }
        });

        gradeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        gradeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeComboBoxActionPerformed(evt);
            }
        });

        coloursComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2" }));
        coloursComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coloursComboBoxActionPerformed(evt);
            }
        });

        seperator.setOrientation(javax.swing.SwingConstants.VERTICAL);

        insulCheckBox.setText("Insulation");
        insulCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insulCheckBoxActionPerformed(evt);
            }
        });

        chemResCheckBox.setText("Chemical Resistance");
        chemResCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemResCheckBoxActionPerformed(evt);
            }
        });

        reinforceCheckBox.setText("Reinforcement");
        reinforceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reinforceCheckBoxActionPerformed(evt);
            }
        });

        quantitySpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                quantitySpinnerStateChanged(evt);
            }
        });

        submitOrderButton.setText("Submit");
        submitOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitOrderButtonActionPerformed(evt);
            }
        });

        discardOrderButton.setText("Discard");
        discardOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardOrderButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addOrderLayout = new javax.swing.GroupLayout(addOrder.getContentPane());
        addOrder.getContentPane().setLayout(addOrderLayout);
        addOrderLayout.setHorizontalGroup(
            addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addOrderLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addOrderLayout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addOrderLayout.createSequentialGroup()
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(diaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(gradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(coloursLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(36, 36, 36)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(diaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coloursComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(sizeLabel))
                        .addGap(18, 18, 18)
                        .addComponent(seperator, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(quantityLabel)
                                    .addComponent(reinforceCheckBox)
                                    .addComponent(chemResCheckBox)
                                    .addComponent(insulCheckBox)))
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(submitOrderButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addComponent(discardOrderButton)))))
                .addContainerGap())
        );
        addOrderLayout.setVerticalGroup(
            addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addOrderLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(sizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addOrderLayout.createSequentialGroup()
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(diaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                                    .addComponent(diaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addComponent(insulCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(reinforceCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chemResCheckBox)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(gradeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gradeComboBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(coloursLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(coloursComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6))
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(quantityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(quantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(submitOrderButton)
                                    .addComponent(discardOrderButton)))))
                    .addComponent(seperator, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pipes R Us");
        setBackground(new java.awt.Color(-723724,true));
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Serif", 2, 14));
        titleLabel.setText("Pipes 'R' Us");
        titleLabel.setToolTipText("For all your pipe needs!");

        totalCostLabel.setText("Total Cost: £##.##");

        itemAmountLabel.setText("Amount of items: #");

        addOrderButton.setText("Add");
        addOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderButtonActionPerformed(evt);
            }
        });

        editOrderButton.setText("Edit");
        editOrderButton.setEnabled(false);
        editOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOrderButtonActionPerformed(evt);
            }
        });

        deleteOrderButton.setText("Delete");
        deleteOrderButton.setEnabled(false);
        deleteOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderButtonActionPerformed(evt);
            }
        });

        orderList.setBackground(new java.awt.Color(-723724,true));
        orderList.setFont(new java.awt.Font("SansSerif", 0, 12));
        orderList.setOpaque(false);
        orderList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                orderListFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                orderListFocusLost(evt);
            }
        });
        orderScrollPane.setViewportView(orderList);

        submitOrdersButton.setText("Submit");
        submitOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitOrdersButtonActionPerformed(evt);
            }
        });

        resetOrdersButton.setText("Reset");
        resetOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetOrdersButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderScrollPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteOrderButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalCostLabel)
                        .addGap(159, 159, 159)
                        .addComponent(itemAmountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(submitOrdersButton)
                        .addGap(18, 18, 18)
                        .addComponent(resetOrdersButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addOrderButton)
                    .addComponent(editOrderButton)
                    .addComponent(deleteOrderButton)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemAmountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalCostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitOrdersButton)
                    .addComponent(resetOrdersButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void addOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderButtonActionPerformed
    addOrder.setVisible(true);
}//GEN-LAST:event_addOrderButtonActionPerformed

public void resetAddOrder(){
    lengthTextField.setText("0.0");
    diaTextField.setText("0.0");
    
    chemResCheckBox.setSelected(false);
    insulCheckBox.setSelected(false);
    reinforceCheckBox.setSelected(false);
    
    quantitySpinner.setValue(0);
    
    gradeComboBox.setSelectedIndex(0);
    coloursComboBox.setSelectedIndex(0);
    
    resetTempVars();       
}

public void resetTempVars(){
    tempQuantity = 0;
    tempDateTime = "";
    
    tempLength = 0.0;
    tempDia = 0.0;
    
    tempGrade = 1;
    tempColours = 0;
    
    tempInsul = false;
    tempChemRes = false;
    tempReinforce = false;
}

    private void resetOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetOrdersButtonActionPerformed
        int option = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to reset orders?",
                "Woah, woah now!",
                JOptionPane.YES_NO_OPTION);
        if(option == 0){
            orders = new ArrayList();
            updateItemList();
        }       
    }//GEN-LAST:event_resetOrdersButtonActionPerformed
    
    private void deleteOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderButtonActionPerformed
        int i = orderList.getSelectedIndex();
        orderListItems.removeElementAt(i);
        orders.remove(i);
        updateItemList();        

        System.out.println("[Gui] Remove the thing at: "+i);
    }//GEN-LAST:event_deleteOrderButtonActionPerformed
    
    private void orderListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_orderListFocusGained
        deleteOrderButton.setEnabled(true);
        editOrderButton.setEnabled(true);
    }//GEN-LAST:event_orderListFocusGained

    private void orderListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_orderListFocusLost
//        deleteOrderButton.setEnabled(false);
//        editOrderButton.setEnabled(false);
    }//GEN-LAST:event_orderListFocusLost

    // for the list shit http://docs.oracle.com/javase/tutorial/uiswing/events/listselectionlistener.html    
    
    private void editOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOrderButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editOrderButtonActionPerformed

    private void insulCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insulCheckBoxActionPerformed
        tempInsul = insulCheckBox.isSelected();
    }//GEN-LAST:event_insulCheckBoxActionPerformed

    private void discardOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardOrderButtonActionPerformed
        // nothing
    }//GEN-LAST:event_discardOrderButtonActionPerformed

    private void submitOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitOrderButtonActionPerformed
        
        if(validateForm()){        
        
            if(tempGrade >= 3 && tempGrade <= 5 && tempColours == 2 && tempInsul && tempReinforce){
                PipeType5 pipe = new PipeType5(tempGrade, tempLength, tempDia, tempChemRes, tempInsul, tempReinforce, tempColours);
                addOrder(pipe);
            }
            else if(tempGrade >= 2 && tempGrade <= 5 && tempColours == 2 && tempInsul && !tempReinforce){
                PipeType4 pipe = new PipeType4(tempGrade, tempLength, tempDia, tempChemRes, tempInsul, tempColours);
                addOrder(pipe);
            }
            else if(tempGrade >= 2 && tempGrade <= 5 && tempColours == 2 && !tempInsul && !tempReinforce){
                PipeType23 pipe = new PipeType23(tempGrade, tempLength, tempDia, tempChemRes, tempColours);
                addOrder(pipe);
            }
            else if(tempGrade >= 2 && tempGrade <= 4 && tempColours == 1 && !tempInsul && !tempReinforce){
                PipeType23 pipe = new PipeType23(tempGrade, tempLength, tempDia, tempChemRes, tempColours);
                addOrder(pipe);
            }
            else if(tempGrade >= 1 && tempGrade <= 3 && tempColours == 0 && !tempInsul && !tempReinforce){
                PipeType1 pipe = new PipeType1(tempGrade, tempLength, tempDia, tempChemRes);
                addOrder(pipe);
            }else{
                 displayError("Aww...", "We don't supply this pipe sorry!");
            }
        
        }
       
    }//GEN-LAST:event_submitOrderButtonActionPerformed

        public void displayError(String title, String body){
            JOptionPane.showMessageDialog(null, body, title, JOptionPane.ERROR_MESSAGE);
        }
    
        public boolean validateForm(){
            
            if(tempGrade < 1  || tempGrade > 5){            
                displayError("Wrong grade!", "Oops... " + tempGrade + " isn't right!"
                                           + "\nMake sure the grade is 1 to 5!");
                return false;
            }
        
            if(tempLength <= 0.0 || tempLength > 6.0){
                displayError("Wrong length!", "Oops... " + tempLength + " isn't right!"
                                           + "\nMake sure the length is 0.0 to 6.0!");
                return false;
            }
        
            if(tempDia <= 0.0){
                displayError("Wrong diameter!", "Oops... " + tempDia + " isn't right!"
                                              + "\nMake sure the diameter is more than 0.0!");
                return false;
            }
            
            if(tempColours < 0 || tempColours > 2){
                displayError("Wrong colours!", "Oops... " + tempColours + " isn't right!"
                                             + "\nMake sure the colours is 0 to 2!");
                return false;
            }
            
            if(tempQuantity <= 0){
                displayError("Wrong quantity!", "Oops... " + tempQuantity + " isn't right!"
                                             + "\nMake sure you have a positive quantity!");
                return false;
            }
            
            return true;
        }
    
        public void addOrder(Pipe pipe){

            Date dateTime = new Date();
            Order order = new Order(pipe, tempQuantity, dateTime.toString());

            orders.add(order);

            // update list

            updateItemList();

            // reset

            addOrder.setVisible(false);
            resetAddOrder();
        }
    
    private void quantitySpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_quantitySpinnerStateChanged
        tempQuantity = (Integer) quantitySpinner.getValue();
    }//GEN-LAST:event_quantitySpinnerStateChanged

    private void reinforceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reinforceCheckBoxActionPerformed
        tempReinforce = reinforceCheckBox.isSelected();
    }//GEN-LAST:event_reinforceCheckBoxActionPerformed

    private void chemResCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemResCheckBoxActionPerformed
        tempChemRes = chemResCheckBox.isSelected();
    }//GEN-LAST:event_chemResCheckBoxActionPerformed

    private void diaTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_diaTextFieldPropertyChange
        tempDia = Double.parseDouble((String) diaTextField.getText());
    }//GEN-LAST:event_diaTextFieldPropertyChange
    
    private void diaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_diaTextFieldActionPerformed
        tempDia = Double.parseDouble((String) diaTextField.getText());
    }//GEN-LAST:event_diaTextFieldActionPerformed

    private void coloursComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coloursComboBoxActionPerformed
        tempColours = Integer.parseInt((String) coloursComboBox.getSelectedItem());
    }//GEN-LAST:event_coloursComboBoxActionPerformed
    
    private void gradeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradeComboBoxActionPerformed
        tempGrade = Integer.parseInt((String) gradeComboBox.getSelectedItem());
    }//GEN-LAST:event_gradeComboBoxActionPerformed

    private void lengthTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lengthTextFieldPropertyChange
        tempLength = Double.parseDouble(lengthTextField.getText());
    }//GEN-LAST:event_lengthTextFieldPropertyChange

    private void lengthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lengthTextFieldActionPerformed
        tempLength = Double.parseDouble(lengthTextField.getText());
    }//GEN-LAST:event_lengthTextFieldActionPerformed

    private void submitOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitOrdersButtonActionPerformed
        int option = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to submit these orders?",
                "Right, ok...",
                JOptionPane.YES_NO_OPTION);
        if(option == 0){
            this.setVisible(false);
            JOptionPane.showMessageDialog(null, "Your order will now be processed!");
        }       
    }//GEN-LAST:event_submitOrdersButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog addOrder;
    private javax.swing.JButton addOrderButton;
    private javax.swing.JCheckBox chemResCheckBox;
    private javax.swing.JComboBox coloursComboBox;
    private javax.swing.JLabel coloursLabel;
    private javax.swing.JButton deleteOrderButton;
    private javax.swing.JLabel diaLabel;
    private javax.swing.JTextField diaTextField;
    private javax.swing.JButton discardOrderButton;
    private javax.swing.JButton editOrderButton;
    private javax.swing.JComboBox gradeComboBox;
    private javax.swing.JLabel gradeLabel;
    private javax.swing.JCheckBox insulCheckBox;
    private javax.swing.JLabel itemAmountLabel;
    private javax.swing.JLabel lengthLabel;
    private javax.swing.JTextField lengthTextField;
    private javax.swing.JList orderList;
    private javax.swing.JScrollPane orderScrollPane;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JSpinner quantitySpinner;
    private javax.swing.JCheckBox reinforceCheckBox;
    private javax.swing.JButton resetOrdersButton;
    private javax.swing.JSeparator seperator;
    private javax.swing.JLabel sizeLabel;
    private javax.swing.JButton submitOrderButton;
    private javax.swing.JButton submitOrdersButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel totalCostLabel;
    // End of variables declaration//GEN-END:variables
}
