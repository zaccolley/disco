package pipesrus;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.*;
import javax.swing.*;

public class Gui extends javax.swing.JFrame {

    private ArrayList<Order> orders = new ArrayList();
    private DefaultListModel orderListItems = new DefaultListModel();
    
    int tempQuantity = 0;
    String tempDateTime;
    
    double tempLength = 0.0;
    double tempDia = 0.0;
    
    int tempGrade = 1;
    int tempColours = 0;
    
    boolean tempInsul = false;
    boolean tempChemRes = false;
    boolean tempReinforce = false;
    

    public Gui(ArrayList<Order> o) {
        resetTempVars();
        
        initComponents();
       
        //http://stackoverflow.com/questions/2442599/how-to-set-jframe-to-appear-centered-regardless-of-the-monitor-resolution
        
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2-200, dim.height/2-this.getSize().height/2);
        
        addOrder.setBounds(0, 0, 373, 243);
        addOrder.setLocation(dim.width/2-this.getSize().width/2+450, dim.height/2-this.getSize().height/2);
        
        orders = o;
        
        updateItemList();
        this.orderList.setModel(orderListItems);
        
        orderListItems.addElement("No orders");
    }
    
    public ArrayList<Order> getOrders(){
        return orders;
    }
    
    public void addOrder(Order o){
        orders.add(o);
    }
    
    public void updateItemList(){
        orderListItems.removeAllElements();        
        
        int pipeAmount = 0;
        
        for(Order o: orders){
            orderListItems.addElement(style("b", "£" + o.getCost() * o.getQuantity()) + " " + o);
            pipeAmount += o.getQuantity();
        }
        
        itemAmountLabel.setText("Order amount: " + orders.size() + " ("+ pipeAmount +" pipes)");
        
        totalCost(orders);
    }
     public void totalCost(ArrayList<Order> orders){
        double totalCost = 0.0;
        
        for(Order o: orders){
            totalCost += o.getCost() * o.getQuantity();
        }
        
        totalCostLabel.setText("Total: £" + (double) Math.floor(totalCost * 100) / 100  + "\n");
    }
    
    
    public String style(String type, String input){
        String output = "<html>";
        if("colour".equals(type)){            
            output += "<html><font color='red'>" + input + "</font>";
        }
        else if("b".equals(type)){            
            output += "<b>" + input + "</b>";
        }
        else if("i".equals(type)){            
            output += "<i>" + input + "</i>";
        }
        else if("u".equals(type)){            
            output += "<u>" + input + "</u>";
        }
        return output;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addOrder = new javax.swing.JDialog();
        pipeSizeLengthTextField = new javax.swing.JTextField();
        pipeGradeLabel = new javax.swing.JLabel();
        pipeGradeComboBox = new javax.swing.JComboBox();
        pipeColoursComboBox = new javax.swing.JComboBox();
        pipeSizeDiaLabel = new javax.swing.JLabel();
        pipeSizeLengthLabel = new javax.swing.JLabel();
        pipeColoursLabel = new javax.swing.JLabel();
        pipeSizeDiaTextField = new javax.swing.JTextField();
        pipeChemResCheckBox = new javax.swing.JCheckBox();
        pipeQuantityLabel = new javax.swing.JLabel();
        pipeReinforceCheckBox = new javax.swing.JCheckBox();
        pipeQuantitySpinner = new javax.swing.JSpinner();
        submitOrderButton = new javax.swing.JButton();
        discardOrderButton = new javax.swing.JButton();
        pipeSizeLabel = new javax.swing.JLabel();
        pipeInsulCheckBox = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        Colours = new javax.swing.JDialog();
        colorChooser = new javax.swing.JColorChooser();
        titleLabel = new javax.swing.JLabel();
        submitOrdersButton = new javax.swing.JButton();
        resetOrdersButton = new javax.swing.JButton();
        orderScrollPane = new javax.swing.JScrollPane();
        orderList = new javax.swing.JList();
        addOrderButton = new javax.swing.JButton();
        editOrderButton = new javax.swing.JButton();
        deleteOrderButton = new javax.swing.JButton();
        totalCostLabel = new javax.swing.JLabel();
        itemAmountLabel = new javax.swing.JLabel();

        addOrder.setResizable(false);

        pipeSizeLengthTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pipeSizeLengthTextField.setText("0.0");
        pipeSizeLengthTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipeSizeLengthTextFieldActionPerformed(evt);
            }
        });
        pipeSizeLengthTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                pipeSizeLengthTextFieldPropertyChange(evt);
            }
        });

        pipeGradeLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        pipeGradeLabel.setText("Grade:");

        pipeGradeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5" }));
        pipeGradeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipeGradeComboBoxActionPerformed(evt);
            }
        });

        pipeColoursComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "1", "2" }));
        pipeColoursComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipeColoursComboBoxActionPerformed(evt);
            }
        });

        pipeSizeDiaLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        pipeSizeDiaLabel.setText("Diameter:");

        pipeSizeLengthLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        pipeSizeLengthLabel.setText("Length:");

        pipeColoursLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        pipeColoursLabel.setText("Colours:");

        pipeSizeDiaTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        pipeSizeDiaTextField.setText("0.0");
        pipeSizeDiaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipeSizeDiaTextFieldActionPerformed(evt);
            }
        });
        pipeSizeDiaTextField.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                pipeSizeDiaTextFieldPropertyChange(evt);
            }
        });

        pipeChemResCheckBox.setText("Chemical Resistance");
        pipeChemResCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipeChemResCheckBoxActionPerformed(evt);
            }
        });

        pipeQuantityLabel.setText("Quantity:");

        pipeReinforceCheckBox.setText("Reinforcement");
        pipeReinforceCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipeReinforceCheckBoxActionPerformed(evt);
            }
        });

        pipeQuantitySpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                pipeQuantitySpinnerStateChanged(evt);
            }
        });

        submitOrderButton.setText("Submit");
        submitOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitOrderButtonActionPerformed(evt);
            }
        });

        discardOrderButton.setText("Discard");
        discardOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardOrderButtonActionPerformed(evt);
            }
        });

        pipeSizeLabel.setText("Size:");

        pipeInsulCheckBox.setText("Insulation");
        pipeInsulCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pipeInsulCheckBoxActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout addOrderLayout = new javax.swing.GroupLayout(addOrder.getContentPane());
        addOrder.getContentPane().setLayout(addOrderLayout);
        addOrderLayout.setHorizontalGroup(
            addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addOrderLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addOrderLayout.createSequentialGroup()
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pipeSizeDiaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pipeSizeLengthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pipeGradeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pipeColoursLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(36, 36, 36)
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pipeSizeLengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pipeSizeDiaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pipeColoursComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pipeGradeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pipeQuantityLabel)
                                    .addComponent(pipeReinforceCheckBox)
                                    .addComponent(pipeChemResCheckBox)
                                    .addComponent(pipeInsulCheckBox)))
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(submitOrderButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                                .addComponent(discardOrderButton))))
                    .addComponent(pipeSizeLabel)
                    .addGroup(addOrderLayout.createSequentialGroup()
                        .addGap(266, 266, 266)
                        .addComponent(pipeQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        addOrderLayout.setVerticalGroup(
            addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addOrderLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(pipeSizeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(addOrderLayout.createSequentialGroup()
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pipeSizeLengthTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pipeSizeLengthLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(pipeSizeDiaTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                                    .addComponent(pipeSizeDiaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addComponent(pipeInsulCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pipeReinforceCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pipeChemResCheckBox)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pipeGradeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pipeGradeComboBox))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pipeColoursLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pipeColoursComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6))
                            .addGroup(addOrderLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pipeQuantityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(pipeQuantitySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(addOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(submitOrderButton)
                                    .addComponent(discardOrderButton)))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout ColoursLayout = new javax.swing.GroupLayout(Colours.getContentPane());
        Colours.getContentPane().setLayout(ColoursLayout);
        ColoursLayout.setHorizontalGroup(
            ColoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColoursLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(colorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 626, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ColoursLayout.setVerticalGroup(
            ColoursLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ColoursLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(colorChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pipes R Us");
        setBackground(new java.awt.Color(-723724,true));
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Serif", 2, 14));
        titleLabel.setText("Pipes 'R' Us");
        titleLabel.setToolTipText("For all your pipe needs!");

        submitOrdersButton.setText("Submit");
        submitOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitOrdersButtonActionPerformed(evt);
            }
        });

        resetOrdersButton.setText("Reset");
        resetOrdersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetOrdersButtonActionPerformed(evt);
            }
        });

        orderList.setBackground(new java.awt.Color(-723724,true));
        orderList.setFont(new java.awt.Font("SansSerif", 0, 12));
        orderList.setOpaque(false);
        orderList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                orderListFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                orderListFocusLost(evt);
            }
        });
        orderScrollPane.setViewportView(orderList);

        addOrderButton.setText("Add");
        addOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addOrderButtonActionPerformed(evt);
            }
        });

        editOrderButton.setText("Edit");
        editOrderButton.setEnabled(false);
        editOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editOrderButtonActionPerformed(evt);
            }
        });

        deleteOrderButton.setText("Delete");
        deleteOrderButton.setEnabled(false);
        deleteOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderButtonActionPerformed(evt);
            }
        });

        totalCostLabel.setText("Total Cost: £100.50");

        itemAmountLabel.setText("Amount of items: 30");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(orderScrollPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(titleLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editOrderButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(deleteOrderButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(totalCostLabel)
                        .addGap(70, 70, 70)
                        .addComponent(itemAmountLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(submitOrdersButton)
                        .addGap(18, 18, 18)
                        .addComponent(resetOrdersButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addOrderButton)
                    .addComponent(editOrderButton)
                    .addComponent(deleteOrderButton)
                    .addComponent(titleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(orderScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemAmountLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(totalCostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(submitOrdersButton)
                    .addComponent(resetOrdersButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void addOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addOrderButtonActionPerformed
//    Colours.setVisible(true);
    Colours.setBounds(0,0,800,400);
    colorChooser.setPreviewPanel(new JPanel());

    addOrder.setVisible(true);
}//GEN-LAST:event_addOrderButtonActionPerformed

public void resetAddOrder(){
    pipeSizeLengthTextField.setText("0.0");
    pipeSizeDiaTextField.setText("0.0");
    
    pipeChemResCheckBox.setSelected(false);
    pipeInsulCheckBox.setSelected(false);
    pipeReinforceCheckBox.setSelected(false);
    
    pipeQuantitySpinner.setValue(0);
    
    pipeGradeComboBox.setSelectedIndex(0);
    pipeColoursComboBox.setSelectedIndex(0);
    
    resetTempVars();       
}

public void resetTempVars(){
    tempQuantity = 0;
    tempDateTime = "";
    
    tempLength = 0.0;
    tempDia = 0.0;
    
    tempGrade = 1;
    tempColours = 0;
    
    tempInsul = false;
    tempChemRes = false;
    tempReinforce = false;
}

    private void resetOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetOrdersButtonActionPerformed
        int option = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to reset orders?",
                "Woah, woah now!",
                JOptionPane.YES_NO_OPTION);
        if(option == 0){
            orders = new ArrayList();
            updateItemList();
            orderListItems.addElement("No orders");
        }       
    }//GEN-LAST:event_resetOrdersButtonActionPerformed
    
    private void deleteOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderButtonActionPerformed
        int i = orderList.getSelectedIndex();
        orderListItems.removeElementAt(i);
        orders.remove(i);
        updateItemList();        
        System.out.println("Remove the thing at: "+i);
    }//GEN-LAST:event_deleteOrderButtonActionPerformed
    
    private void orderListFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_orderListFocusGained
        deleteOrderButton.setEnabled(true);
        editOrderButton.setEnabled(true);
    }//GEN-LAST:event_orderListFocusGained

    private void orderListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_orderListFocusLost
//        deleteOrderButton.setEnabled(false);
//        editOrderButton.setEnabled(false);
    }//GEN-LAST:event_orderListFocusLost

// for the list shit http://docs.oracle.com/javase/tutorial/uiswing/events/listselectionlistener.html    
    
    private void editOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editOrderButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_editOrderButtonActionPerformed

    private void pipeInsulCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipeInsulCheckBoxActionPerformed
        tempInsul = pipeInsulCheckBox.isSelected();
    }//GEN-LAST:event_pipeInsulCheckBoxActionPerformed

    private void discardOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardOrderButtonActionPerformed
        
    }//GEN-LAST:event_discardOrderButtonActionPerformed

    private void submitOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitOrderButtonActionPerformed
        Order order = new Order();
        
        
        
//        try{
//            
//        }
//        catch(Exception dead){
//            System.out.println(dead);
//        }
        
        Pipe pipe = new Pipe();
        
        pipe.setLength(tempLength);
        pipe.setDia(tempDia);
        
        pipe.setGrade(tempGrade);
        pipe.setColours(tempColours);
        
        pipe.setChemRes(tempChemRes);
        pipe.setInsul(tempInsul);
        pipe.setReinforce(tempReinforce);
        
        order.setPipe(pipe);

        Date dateTime = new Date();
        order.setDateTime(dateTime);

        order.calcCost();
        
        order.setQuantity(tempQuantity);

        orders.add(order);
        
        // update list

        updateItemList();

        // reset
        
        addOrder.setVisible(false);
        resetAddOrder();
    }//GEN-LAST:event_submitOrderButtonActionPerformed

    private void pipeQuantitySpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_pipeQuantitySpinnerStateChanged
        tempQuantity = (Integer) pipeQuantitySpinner.getValue();
    }//GEN-LAST:event_pipeQuantitySpinnerStateChanged

    private void pipeReinforceCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipeReinforceCheckBoxActionPerformed
        tempReinforce = pipeReinforceCheckBox.isSelected();
    }//GEN-LAST:event_pipeReinforceCheckBoxActionPerformed

    private void pipeChemResCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipeChemResCheckBoxActionPerformed
        tempChemRes = pipeChemResCheckBox.isSelected();
    }//GEN-LAST:event_pipeChemResCheckBoxActionPerformed

    private void pipeSizeDiaTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_pipeSizeDiaTextFieldPropertyChange
        tempDia = Double.parseDouble((String) pipeSizeDiaTextField.getText());
    }//GEN-LAST:event_pipeSizeDiaTextFieldPropertyChange

    private void pipeSizeDiaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipeSizeDiaTextFieldActionPerformed
        tempDia = Double.parseDouble((String) pipeSizeDiaTextField.getText());
    }//GEN-LAST:event_pipeSizeDiaTextFieldActionPerformed

    private void pipeColoursComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipeColoursComboBoxActionPerformed
        tempColours = Integer.parseInt((String) pipeColoursComboBox.getSelectedItem());
    }//GEN-LAST:event_pipeColoursComboBoxActionPerformed

    private void pipeGradeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipeGradeComboBoxActionPerformed
        tempGrade = Integer.parseInt((String) pipeGradeComboBox.getSelectedItem());
    }//GEN-LAST:event_pipeGradeComboBoxActionPerformed

    private void pipeSizeLengthTextFieldPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_pipeSizeLengthTextFieldPropertyChange
        tempLength = Double.parseDouble(pipeSizeLengthTextField.getText());
    }//GEN-LAST:event_pipeSizeLengthTextFieldPropertyChange

    private void pipeSizeLengthTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pipeSizeLengthTextFieldActionPerformed
        tempLength = Double.parseDouble(pipeSizeLengthTextField.getText());
    }//GEN-LAST:event_pipeSizeLengthTextFieldActionPerformed

    private void submitOrdersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitOrdersButtonActionPerformed
        int option = JOptionPane.showConfirmDialog(null,
                "Are you sure you want to submit these orders?",
                "Right, ok...",
                JOptionPane.YES_NO_OPTION);
        if(option == 0){
            this.setVisible(false);
            JOptionPane.showMessageDialog(null, "Your order will now be processed!");
            
        }       
    }//GEN-LAST:event_submitOrdersButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Colours;
    private javax.swing.JDialog addOrder;
    private javax.swing.JButton addOrderButton;
    private javax.swing.JColorChooser colorChooser;
    private javax.swing.JButton deleteOrderButton;
    private javax.swing.JButton discardOrderButton;
    private javax.swing.JButton editOrderButton;
    private javax.swing.JLabel itemAmountLabel;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList orderList;
    private javax.swing.JScrollPane orderScrollPane;
    private javax.swing.JCheckBox pipeChemResCheckBox;
    private javax.swing.JComboBox pipeColoursComboBox;
    private javax.swing.JLabel pipeColoursLabel;
    private javax.swing.JComboBox pipeGradeComboBox;
    private javax.swing.JLabel pipeGradeLabel;
    private javax.swing.JCheckBox pipeInsulCheckBox;
    private javax.swing.JLabel pipeQuantityLabel;
    private javax.swing.JSpinner pipeQuantitySpinner;
    private javax.swing.JCheckBox pipeReinforceCheckBox;
    private javax.swing.JLabel pipeSizeDiaLabel;
    private javax.swing.JTextField pipeSizeDiaTextField;
    private javax.swing.JLabel pipeSizeLabel;
    private javax.swing.JLabel pipeSizeLengthLabel;
    private javax.swing.JTextField pipeSizeLengthTextField;
    private javax.swing.JButton resetOrdersButton;
    private javax.swing.JButton submitOrderButton;
    private javax.swing.JButton submitOrdersButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel totalCostLabel;
    // End of variables declaration//GEN-END:variables
}
